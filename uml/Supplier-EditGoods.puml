'编辑商品 流程图
@startuml
start
:登录Supplier 进入商品-商品列表;
:点击[操作][编辑]跳转编辑页面;

if(下一步?) then (yes)
    repeat
    :填写价格及订货量;
    repeat while(参数校验) is (不通过)
else (no)
endif
:保存\直接保存;
(A)
note right: 连接符A
@enduml

@startuml
(A)
note left: 连接符A
:修改商品信息;
if(B2B模式 && 已审核) then (yes)
    :B2B模式且已审核\n不允许修改 抛出异常;
    stop
else (no)
endif
if(参数校验?) then (不通过)
    :抛出异常;
    stop
else(通过)
endif
note left
    验证包括sku编码重复
    sku数据重复
    相关基础数据验证
    签约分类
    签约品牌
    店铺分类等
end note
:修改商品相关信息;
:areas 埋点;
:删除ES中的SKU信息;
:持久化SKU到ES;
stop
@enduml

'编辑商品 时序图
@startuml
autonumber
actor react
react -> controller     :发起编辑保存商品请求
controller -> controller:参数校验
controller -> provider  :商品信息修改\ngoodsProvider.modify
provider -> service     :商品信息修改\ngoodsService.edit
service -> service      :参数校验
note right
    B2B模式下已审核商品不可编辑
    sku编码重复、sku数据重复
    签约分类 签约品牌 店铺分类
    等基础数据验证
end note
service -> repository   :保存商品数据
note over service,repository
    依次请求
    保存商品数据goodsRepository.save
    更新图片goodsImageRepository.save
    更新店铺分类storeCateGoodsRelaRepository.save
    更新商品属性goodsPropDetailRelRepository.save
    更新规格goodsSpecRepository.save
    更新规格值goodsSpecDetailRepository.save
    更新sku规格关系goodsInfoSpecDetailRelRepository.save
end note
database db
repository -> db        :更新商品数据
db --> repository       :返回更新的商品数据
repository --> service  :返回更新的商品数据
service --> provider    :返回封装的新增、删除、old的商品信息
provider -> service     :ares埋点\ngoodsAresProvider.dispatchFunction
service --> provider    :返回结果
provider --> controller :返回封装的新增、删除、old的商品信息
controller -> service   :删除ES中的商品\nesGoodsInfoElasticService.deleteByGoods
service -> db           :删除ES中的商品
db --> service          :返回结果
service --> controller  :返回结果
controller -> service   :商品持久到ES\nesGoodsInfoElasticService.initEsGoodsInfo
service -> db           :商品持久到ES
db --> service          :返回结果
service --> controller  :返回结果
controller --> react    :返回结果
@enduml

'编辑商品 类图
@startuml
class GoodsController{
    -GoodsProvider goodsProvider
    -FreightTemplateGoodsQueryProvider freightTemplateGoodsQueryProvider
    -EsGoodsInfoElasticService esGoodsInfoElasticService
    +BaseResponse<String> edit(GoodsAddRequest request)
}

GoodsController *- FreightTemplateGoodsQueryProvider
EsGoodsInfoElasticService -* GoodsController
GoodsController *-- GoodsProvider

class EsGoodsInfoElasticService{
    +void initEsGoodsInfo(EsGoodsInfoRequest request)
}
interface FreightTemplateGoodsQueryProvider{
    +BaseResponse existsById(FreightTemplateGoodsExistsByIdRequest request)
}
interface GoodsProvider{
    BaseResponse<GoodsModifyResponse> modify(GoodsModifyRequest request)
}

FreightTemplateGoodsQueryProvider <|. FreightTemplateGoodsQueryController
class FreightTemplateGoodsQueryController{
    -FreightTemplateGoodsService freightTemplateGoodsService
    +BaseResponse existsById(FreightTemplateGoodsExistsByIdRequest request)
}
FreightTemplateGoodsQueryController *-- FreightTemplateGoodsService
class FreightTemplateGoodsService{
    -FreightTemplateGoodsRepository freightTemplateGoodsRepository
    +void hasFreightTemp(Long freightTempId)
}
FreightTemplateGoodsService *- FreightTemplateGoodsRepository
interface FreightTemplateGoodsRepository{
    +FreightTemplateGoods queryById(Long freightTempId)
}

interface GoodsRepository{
    +T findOne(ID id)
    +long count(Specification<T> spec)
    +<S extends T> S save(S entity)
}
GoodsProvider <|.. GoodsController1
class GoodsController1{
    -GoodsService goodsService
    -GoodsAresService goodsAresService
    +BaseResponse<GoodsModifyResponse> modify(GoodsModifyRequest request)
}
note top: 区别于buff中的GoodsController
GoodsController1 *-- GoodsService
class GoodsService{
    -GoodsRepository goodsRepository
    -GoodsInfoRepository goodsInfoRepository
    -GoodsImageRepository goodsImageRepository
    -StoreCateGoodsRelaRepository storeCateGoodsRelaRepository
    -GoodsPropDetailRelRepository goodsPropDetailRelRepository
    -GoodsSpecRepository goodsSpecRepository
    -GoodsSpecDetailRepository goodsSpecDetailRepository
    -GoodsInfoSpecDetailRelRepository goodsInfoSpecDetailRelRepository
    -GoodsIntervalPriceRepository goodsIntervalPriceRepository
    -GoodsLevelPriceRepository goodsLevelPriceRepository
    -GoodsCustomerPriceRepository goodsCustomerPriceRepository
    -GoodsCommonService goodsCommonService
    +String edit(GoodsSaveRequest saveRequest)
}
GoodsService *- GoodsRepository
GoodsService *-- GoodsInfoRepository
GoodsService *-- GoodsImageRepository
GoodsService *-- StoreCateGoodsRelaRepository
GoodsService *-- GoodsPropDetailRelRepository
GoodsService *-- GoodsSpecRepository
GoodsService *-- GoodsSpecDetailRepository
GoodsService *-- GoodsInfoSpecDetailRelRepository
GoodsIntervalPriceRepository --* GoodsService
GoodsLevelPriceRepository --* GoodsService
GoodsCustomerPriceRepository --* GoodsService
GoodsCommonService -* GoodsService

interface GoodsInfoRepository{
    +List<T> findAll(Specification<T> spec)
}
interface GoodsImageRepository{
    +<S extends T> S save(S entity)
}
interface StoreCateGoodsRelaRepository{
    +<S extends T> S save(S entity)
}
interface GoodsPropDetailRelRepository{
    +<S extends T> List save(Iterable entities)
}
interface GoodsSpecRepository{
    +<S extends T> S save(S entity)
}
interface GoodsSpecDetailRepository{
    +<S extends T> S save(S entity)
}
interface GoodsInfoSpecDetailRelRepository{
    +<S extends T> S save(S entity)
}
interface GoodsIntervalPriceRepository{
    +List<GoodsIntervalPrice> findByGoodsId(String goodsId)
}
interface GoodsLevelPriceRepository{
    +List<GoodsLevelPrice> findByGoodsId(String goodsId)
}
interface GoodsCustomerPriceRepository{
    +List<GoodsCustomerPrice> findByGoodsId(String goodsId)
}


class GoodsCommonService{
    -AuditQueryProvider auditQueryProvider
    +void setCheckState(Goods goods)
}
AuditQueryProvider -* GoodsCommonService
interface AuditQueryProvider{
    +BaseResponse<BossGoodsAuditResponse> isBossGoodsAudit()
    +BaseResponse<SupplierGoodsAuditResponse> isSupplierGoodsAudit()
}
note left: 访问到setting服务\n参见setting服务类图
@enduml